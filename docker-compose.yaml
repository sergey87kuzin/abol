version: "3.0"
services:
  db:
    container_name: "db"
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=abol
    ports:
      - "5432:5432"
    networks:
      - custom
  db_test:
    container_name: "db_test"
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres_test
      - POSTGRES_PASSWORD=postgres_test
      - POSTGRES_DB=abol_test
    ports:
      - "5433:5432"
    networks:
      - custom
  web_service:
    container_name: web_service
    depends_on:
      - db
    env_file:
      ./web/.env
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - custom
  grpc_service:
    container_name: grpc_service
    depends_on:
      - db
      - rabbitmq
    env_file:
      ./grpc/.env
    build:
      context: ./grpc
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    networks:
      - custom
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"

  redis:
    image: redis:6.0.6-alpine
    restart: always
    volumes:
      - redis:/data
    command: redis-server
    ports:
      - 6379
    networks:
      - custom

networks:
  custom:
    driver: bridge

volumes:
  db-data:
  redis:
